/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated/route'
import { Route as authRouteImport } from './routes/(auth)/route'
import { Route as IndexImport } from './routes/index'
import { Route as authSignInImport } from './routes/(auth)/sign-in'
import { Route as authExitImport } from './routes/(auth)/exit'

// Create Virtual Routes

const errors404LazyImport = createFileRoute('/(errors)/404')()
const authSignUpLazyImport = createFileRoute('/(auth)/sign-up')()
const authForgotPasswordLazyImport = createFileRoute(
  '/(auth)/forgot-password',
)()
const AuthenticatedSettingsRouteLazyImport = createFileRoute(
  '/_authenticated/settings',
)()
const AuthenticatedTicketsIndexLazyImport = createFileRoute(
  '/_authenticated/tickets/',
)()
const AuthenticatedTasksIndexLazyImport = createFileRoute(
  '/_authenticated/tasks/',
)()
const AuthenticatedSettingsIndexLazyImport = createFileRoute(
  '/_authenticated/settings/',
)()
const AuthenticatedHelpCenterIndexLazyImport = createFileRoute(
  '/_authenticated/help-center/',
)()
const AuthenticatedDepartmentsIndexLazyImport = createFileRoute(
  '/_authenticated/departments/',
)()
const AuthenticatedDashboardIndexLazyImport = createFileRoute(
  '/_authenticated/dashboard/',
)()
const AuthenticatedCardRfidIndexLazyImport = createFileRoute(
  '/_authenticated/card-rfid/',
)()
const AuthenticatedAppsIndexLazyImport = createFileRoute(
  '/_authenticated/apps/',
)()
const AuthenticatedAccessControlsIndexLazyImport = createFileRoute(
  '/_authenticated/access-controls/',
)()
const AuthenticatedSettingsAccountLazyImport = createFileRoute(
  '/_authenticated/settings/account',
)()
const AuthenticatedVisitorManagementVisitorsIndexLazyImport = createFileRoute(
  '/_authenticated/visitor-management/visitors/',
)()
const AuthenticatedVisitorManagementCompaniesIndexLazyImport = createFileRoute(
  '/_authenticated/visitor-management/companies/',
)()
const AuthenticatedVisitorManagementVisitorsVisitorIdLazyImport =
  createFileRoute('/_authenticated/visitor-management/visitors/$visitorId')()
const AuthenticatedVisitorManagementCompaniesCompanyIdLazyImport =
  createFileRoute('/_authenticated/visitor-management/companies/$companyId')()

// Create/Update Routes

const AuthenticatedRouteRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const authRouteRoute = authRouteImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const errors404LazyRoute = errors404LazyImport
  .update({
    id: '/(errors)/404',
    path: '/404',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/404.lazy').then((d) => d.Route))

const authSignUpLazyRoute = authSignUpLazyImport
  .update({
    id: '/sign-up',
    path: '/sign-up',
    getParentRoute: () => authRouteRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/sign-up.lazy').then((d) => d.Route))

const authForgotPasswordLazyRoute = authForgotPasswordLazyImport
  .update({
    id: '/forgot-password',
    path: '/forgot-password',
    getParentRoute: () => authRouteRoute,
  } as any)
  .lazy(() =>
    import('./routes/(auth)/forgot-password.lazy').then((d) => d.Route),
  )

const AuthenticatedSettingsRouteLazyRoute =
  AuthenticatedSettingsRouteLazyImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/route.lazy').then((d) => d.Route),
  )

const authSignInRoute = authSignInImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => authRouteRoute,
} as any)

const authExitRoute = authExitImport.update({
  id: '/exit',
  path: '/exit',
  getParentRoute: () => authRouteRoute,
} as any)

const AuthenticatedTicketsIndexLazyRoute =
  AuthenticatedTicketsIndexLazyImport.update({
    id: '/tickets/',
    path: '/tickets/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/tickets/index.lazy').then((d) => d.Route),
  )

const AuthenticatedTasksIndexLazyRoute =
  AuthenticatedTasksIndexLazyImport.update({
    id: '/tasks/',
    path: '/tasks/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/tasks/index.lazy').then((d) => d.Route),
  )

const AuthenticatedSettingsIndexLazyRoute =
  AuthenticatedSettingsIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/index.lazy').then((d) => d.Route),
  )

const AuthenticatedHelpCenterIndexLazyRoute =
  AuthenticatedHelpCenterIndexLazyImport.update({
    id: '/help-center/',
    path: '/help-center/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/help-center/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedDepartmentsIndexLazyRoute =
  AuthenticatedDepartmentsIndexLazyImport.update({
    id: '/departments/',
    path: '/departments/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/departments/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedDashboardIndexLazyRoute =
  AuthenticatedDashboardIndexLazyImport.update({
    id: '/dashboard/',
    path: '/dashboard/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/dashboard/index.lazy').then((d) => d.Route),
  )

const AuthenticatedCardRfidIndexLazyRoute =
  AuthenticatedCardRfidIndexLazyImport.update({
    id: '/card-rfid/',
    path: '/card-rfid/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/card-rfid/index.lazy').then((d) => d.Route),
  )

const AuthenticatedAppsIndexLazyRoute = AuthenticatedAppsIndexLazyImport.update(
  {
    id: '/apps/',
    path: '/apps/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any,
).lazy(() =>
  import('./routes/_authenticated/apps/index.lazy').then((d) => d.Route),
)

const AuthenticatedAccessControlsIndexLazyRoute =
  AuthenticatedAccessControlsIndexLazyImport.update({
    id: '/access-controls/',
    path: '/access-controls/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/access-controls/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedSettingsAccountLazyRoute =
  AuthenticatedSettingsAccountLazyImport.update({
    id: '/account',
    path: '/account',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/account.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedVisitorManagementVisitorsIndexLazyRoute =
  AuthenticatedVisitorManagementVisitorsIndexLazyImport.update({
    id: '/visitor-management/visitors/',
    path: '/visitor-management/visitors/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/_authenticated/visitor-management/visitors/index.lazy'
    ).then((d) => d.Route),
  )

const AuthenticatedVisitorManagementCompaniesIndexLazyRoute =
  AuthenticatedVisitorManagementCompaniesIndexLazyImport.update({
    id: '/visitor-management/companies/',
    path: '/visitor-management/companies/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/_authenticated/visitor-management/companies/index.lazy'
    ).then((d) => d.Route),
  )

const AuthenticatedVisitorManagementVisitorsVisitorIdLazyRoute =
  AuthenticatedVisitorManagementVisitorsVisitorIdLazyImport.update({
    id: '/visitor-management/visitors/$visitorId',
    path: '/visitor-management/visitors/$visitorId',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/_authenticated/visitor-management/visitors/$visitorId.lazy'
    ).then((d) => d.Route),
  )

const AuthenticatedVisitorManagementCompaniesCompanyIdLazyRoute =
  AuthenticatedVisitorManagementCompaniesCompanyIdLazyImport.update({
    id: '/visitor-management/companies/$companyId',
    path: '/visitor-management/companies/$companyId',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/_authenticated/visitor-management/companies/$companyId.lazy'
    ).then((d) => d.Route),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/(auth)': {
      id: '/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authRouteImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/exit': {
      id: '/(auth)/exit'
      path: '/exit'
      fullPath: '/exit'
      preLoaderRoute: typeof authExitImport
      parentRoute: typeof authRouteImport
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInImport
      parentRoute: typeof authRouteImport
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsRouteLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordLazyImport
      parentRoute: typeof authRouteImport
    }
    '/(auth)/sign-up': {
      id: '/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpLazyImport
      parentRoute: typeof authRouteImport
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404LazyImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/settings/account': {
      id: '/_authenticated/settings/account'
      path: '/account'
      fullPath: '/settings/account'
      preLoaderRoute: typeof AuthenticatedSettingsAccountLazyImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyImport
    }
    '/_authenticated/access-controls/': {
      id: '/_authenticated/access-controls/'
      path: '/access-controls'
      fullPath: '/access-controls'
      preLoaderRoute: typeof AuthenticatedAccessControlsIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/apps/': {
      id: '/_authenticated/apps/'
      path: '/apps'
      fullPath: '/apps'
      preLoaderRoute: typeof AuthenticatedAppsIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/card-rfid/': {
      id: '/_authenticated/card-rfid/'
      path: '/card-rfid'
      fullPath: '/card-rfid'
      preLoaderRoute: typeof AuthenticatedCardRfidIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/dashboard/': {
      id: '/_authenticated/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/departments/': {
      id: '/_authenticated/departments/'
      path: '/departments'
      fullPath: '/departments'
      preLoaderRoute: typeof AuthenticatedDepartmentsIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/help-center/': {
      id: '/_authenticated/help-center/'
      path: '/help-center'
      fullPath: '/help-center'
      preLoaderRoute: typeof AuthenticatedHelpCenterIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/settings/': {
      id: '/_authenticated/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof AuthenticatedSettingsIndexLazyImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyImport
    }
    '/_authenticated/tasks/': {
      id: '/_authenticated/tasks/'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof AuthenticatedTasksIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/tickets/': {
      id: '/_authenticated/tickets/'
      path: '/tickets'
      fullPath: '/tickets'
      preLoaderRoute: typeof AuthenticatedTicketsIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/visitor-management/companies/$companyId': {
      id: '/_authenticated/visitor-management/companies/$companyId'
      path: '/visitor-management/companies/$companyId'
      fullPath: '/visitor-management/companies/$companyId'
      preLoaderRoute: typeof AuthenticatedVisitorManagementCompaniesCompanyIdLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/visitor-management/visitors/$visitorId': {
      id: '/_authenticated/visitor-management/visitors/$visitorId'
      path: '/visitor-management/visitors/$visitorId'
      fullPath: '/visitor-management/visitors/$visitorId'
      preLoaderRoute: typeof AuthenticatedVisitorManagementVisitorsVisitorIdLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/visitor-management/companies/': {
      id: '/_authenticated/visitor-management/companies/'
      path: '/visitor-management/companies'
      fullPath: '/visitor-management/companies'
      preLoaderRoute: typeof AuthenticatedVisitorManagementCompaniesIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/visitor-management/visitors/': {
      id: '/_authenticated/visitor-management/visitors/'
      path: '/visitor-management/visitors'
      fullPath: '/visitor-management/visitors'
      preLoaderRoute: typeof AuthenticatedVisitorManagementVisitorsIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
  }
}

// Create and export the route tree

interface authRouteRouteChildren {
  authExitRoute: typeof authExitRoute
  authSignInRoute: typeof authSignInRoute
  authForgotPasswordLazyRoute: typeof authForgotPasswordLazyRoute
  authSignUpLazyRoute: typeof authSignUpLazyRoute
}

const authRouteRouteChildren: authRouteRouteChildren = {
  authExitRoute: authExitRoute,
  authSignInRoute: authSignInRoute,
  authForgotPasswordLazyRoute: authForgotPasswordLazyRoute,
  authSignUpLazyRoute: authSignUpLazyRoute,
}

const authRouteRouteWithChildren = authRouteRoute._addFileChildren(
  authRouteRouteChildren,
)

interface AuthenticatedSettingsRouteLazyRouteChildren {
  AuthenticatedSettingsAccountLazyRoute: typeof AuthenticatedSettingsAccountLazyRoute
  AuthenticatedSettingsIndexLazyRoute: typeof AuthenticatedSettingsIndexLazyRoute
}

const AuthenticatedSettingsRouteLazyRouteChildren: AuthenticatedSettingsRouteLazyRouteChildren =
  {
    AuthenticatedSettingsAccountLazyRoute:
      AuthenticatedSettingsAccountLazyRoute,
    AuthenticatedSettingsIndexLazyRoute: AuthenticatedSettingsIndexLazyRoute,
  }

const AuthenticatedSettingsRouteLazyRouteWithChildren =
  AuthenticatedSettingsRouteLazyRoute._addFileChildren(
    AuthenticatedSettingsRouteLazyRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedSettingsRouteLazyRoute: typeof AuthenticatedSettingsRouteLazyRouteWithChildren
  AuthenticatedAccessControlsIndexLazyRoute: typeof AuthenticatedAccessControlsIndexLazyRoute
  AuthenticatedAppsIndexLazyRoute: typeof AuthenticatedAppsIndexLazyRoute
  AuthenticatedCardRfidIndexLazyRoute: typeof AuthenticatedCardRfidIndexLazyRoute
  AuthenticatedDashboardIndexLazyRoute: typeof AuthenticatedDashboardIndexLazyRoute
  AuthenticatedDepartmentsIndexLazyRoute: typeof AuthenticatedDepartmentsIndexLazyRoute
  AuthenticatedHelpCenterIndexLazyRoute: typeof AuthenticatedHelpCenterIndexLazyRoute
  AuthenticatedTasksIndexLazyRoute: typeof AuthenticatedTasksIndexLazyRoute
  AuthenticatedTicketsIndexLazyRoute: typeof AuthenticatedTicketsIndexLazyRoute
  AuthenticatedVisitorManagementCompaniesCompanyIdLazyRoute: typeof AuthenticatedVisitorManagementCompaniesCompanyIdLazyRoute
  AuthenticatedVisitorManagementVisitorsVisitorIdLazyRoute: typeof AuthenticatedVisitorManagementVisitorsVisitorIdLazyRoute
  AuthenticatedVisitorManagementCompaniesIndexLazyRoute: typeof AuthenticatedVisitorManagementCompaniesIndexLazyRoute
  AuthenticatedVisitorManagementVisitorsIndexLazyRoute: typeof AuthenticatedVisitorManagementVisitorsIndexLazyRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedSettingsRouteLazyRoute:
    AuthenticatedSettingsRouteLazyRouteWithChildren,
  AuthenticatedAccessControlsIndexLazyRoute:
    AuthenticatedAccessControlsIndexLazyRoute,
  AuthenticatedAppsIndexLazyRoute: AuthenticatedAppsIndexLazyRoute,
  AuthenticatedCardRfidIndexLazyRoute: AuthenticatedCardRfidIndexLazyRoute,
  AuthenticatedDashboardIndexLazyRoute: AuthenticatedDashboardIndexLazyRoute,
  AuthenticatedDepartmentsIndexLazyRoute:
    AuthenticatedDepartmentsIndexLazyRoute,
  AuthenticatedHelpCenterIndexLazyRoute: AuthenticatedHelpCenterIndexLazyRoute,
  AuthenticatedTasksIndexLazyRoute: AuthenticatedTasksIndexLazyRoute,
  AuthenticatedTicketsIndexLazyRoute: AuthenticatedTicketsIndexLazyRoute,
  AuthenticatedVisitorManagementCompaniesCompanyIdLazyRoute:
    AuthenticatedVisitorManagementCompaniesCompanyIdLazyRoute,
  AuthenticatedVisitorManagementVisitorsVisitorIdLazyRoute:
    AuthenticatedVisitorManagementVisitorsVisitorIdLazyRoute,
  AuthenticatedVisitorManagementCompaniesIndexLazyRoute:
    AuthenticatedVisitorManagementCompaniesIndexLazyRoute,
  AuthenticatedVisitorManagementVisitorsIndexLazyRoute:
    AuthenticatedVisitorManagementVisitorsIndexLazyRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof authRouteRouteWithChildren
  '': typeof AuthenticatedRouteRouteWithChildren
  '/exit': typeof authExitRoute
  '/sign-in': typeof authSignInRoute
  '/settings': typeof AuthenticatedSettingsRouteLazyRouteWithChildren
  '/forgot-password': typeof authForgotPasswordLazyRoute
  '/sign-up': typeof authSignUpLazyRoute
  '/404': typeof errors404LazyRoute
  '/settings/account': typeof AuthenticatedSettingsAccountLazyRoute
  '/access-controls': typeof AuthenticatedAccessControlsIndexLazyRoute
  '/apps': typeof AuthenticatedAppsIndexLazyRoute
  '/card-rfid': typeof AuthenticatedCardRfidIndexLazyRoute
  '/dashboard': typeof AuthenticatedDashboardIndexLazyRoute
  '/departments': typeof AuthenticatedDepartmentsIndexLazyRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexLazyRoute
  '/settings/': typeof AuthenticatedSettingsIndexLazyRoute
  '/tasks': typeof AuthenticatedTasksIndexLazyRoute
  '/tickets': typeof AuthenticatedTicketsIndexLazyRoute
  '/visitor-management/companies/$companyId': typeof AuthenticatedVisitorManagementCompaniesCompanyIdLazyRoute
  '/visitor-management/visitors/$visitorId': typeof AuthenticatedVisitorManagementVisitorsVisitorIdLazyRoute
  '/visitor-management/companies': typeof AuthenticatedVisitorManagementCompaniesIndexLazyRoute
  '/visitor-management/visitors': typeof AuthenticatedVisitorManagementVisitorsIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof authRouteRouteWithChildren
  '': typeof AuthenticatedRouteRouteWithChildren
  '/exit': typeof authExitRoute
  '/sign-in': typeof authSignInRoute
  '/forgot-password': typeof authForgotPasswordLazyRoute
  '/sign-up': typeof authSignUpLazyRoute
  '/404': typeof errors404LazyRoute
  '/settings/account': typeof AuthenticatedSettingsAccountLazyRoute
  '/access-controls': typeof AuthenticatedAccessControlsIndexLazyRoute
  '/apps': typeof AuthenticatedAppsIndexLazyRoute
  '/card-rfid': typeof AuthenticatedCardRfidIndexLazyRoute
  '/dashboard': typeof AuthenticatedDashboardIndexLazyRoute
  '/departments': typeof AuthenticatedDepartmentsIndexLazyRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexLazyRoute
  '/settings': typeof AuthenticatedSettingsIndexLazyRoute
  '/tasks': typeof AuthenticatedTasksIndexLazyRoute
  '/tickets': typeof AuthenticatedTicketsIndexLazyRoute
  '/visitor-management/companies/$companyId': typeof AuthenticatedVisitorManagementCompaniesCompanyIdLazyRoute
  '/visitor-management/visitors/$visitorId': typeof AuthenticatedVisitorManagementVisitorsVisitorIdLazyRoute
  '/visitor-management/companies': typeof AuthenticatedVisitorManagementCompaniesIndexLazyRoute
  '/visitor-management/visitors': typeof AuthenticatedVisitorManagementVisitorsIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/(auth)': typeof authRouteRouteWithChildren
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/(auth)/exit': typeof authExitRoute
  '/(auth)/sign-in': typeof authSignInRoute
  '/_authenticated/settings': typeof AuthenticatedSettingsRouteLazyRouteWithChildren
  '/(auth)/forgot-password': typeof authForgotPasswordLazyRoute
  '/(auth)/sign-up': typeof authSignUpLazyRoute
  '/(errors)/404': typeof errors404LazyRoute
  '/_authenticated/settings/account': typeof AuthenticatedSettingsAccountLazyRoute
  '/_authenticated/access-controls/': typeof AuthenticatedAccessControlsIndexLazyRoute
  '/_authenticated/apps/': typeof AuthenticatedAppsIndexLazyRoute
  '/_authenticated/card-rfid/': typeof AuthenticatedCardRfidIndexLazyRoute
  '/_authenticated/dashboard/': typeof AuthenticatedDashboardIndexLazyRoute
  '/_authenticated/departments/': typeof AuthenticatedDepartmentsIndexLazyRoute
  '/_authenticated/help-center/': typeof AuthenticatedHelpCenterIndexLazyRoute
  '/_authenticated/settings/': typeof AuthenticatedSettingsIndexLazyRoute
  '/_authenticated/tasks/': typeof AuthenticatedTasksIndexLazyRoute
  '/_authenticated/tickets/': typeof AuthenticatedTicketsIndexLazyRoute
  '/_authenticated/visitor-management/companies/$companyId': typeof AuthenticatedVisitorManagementCompaniesCompanyIdLazyRoute
  '/_authenticated/visitor-management/visitors/$visitorId': typeof AuthenticatedVisitorManagementVisitorsVisitorIdLazyRoute
  '/_authenticated/visitor-management/companies/': typeof AuthenticatedVisitorManagementCompaniesIndexLazyRoute
  '/_authenticated/visitor-management/visitors/': typeof AuthenticatedVisitorManagementVisitorsIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/exit'
    | '/sign-in'
    | '/settings'
    | '/forgot-password'
    | '/sign-up'
    | '/404'
    | '/settings/account'
    | '/access-controls'
    | '/apps'
    | '/card-rfid'
    | '/dashboard'
    | '/departments'
    | '/help-center'
    | '/settings/'
    | '/tasks'
    | '/tickets'
    | '/visitor-management/companies/$companyId'
    | '/visitor-management/visitors/$visitorId'
    | '/visitor-management/companies'
    | '/visitor-management/visitors'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/exit'
    | '/sign-in'
    | '/forgot-password'
    | '/sign-up'
    | '/404'
    | '/settings/account'
    | '/access-controls'
    | '/apps'
    | '/card-rfid'
    | '/dashboard'
    | '/departments'
    | '/help-center'
    | '/settings'
    | '/tasks'
    | '/tickets'
    | '/visitor-management/companies/$companyId'
    | '/visitor-management/visitors/$visitorId'
    | '/visitor-management/companies'
    | '/visitor-management/visitors'
  id:
    | '__root__'
    | '/'
    | '/(auth)'
    | '/_authenticated'
    | '/(auth)/exit'
    | '/(auth)/sign-in'
    | '/_authenticated/settings'
    | '/(auth)/forgot-password'
    | '/(auth)/sign-up'
    | '/(errors)/404'
    | '/_authenticated/settings/account'
    | '/_authenticated/access-controls/'
    | '/_authenticated/apps/'
    | '/_authenticated/card-rfid/'
    | '/_authenticated/dashboard/'
    | '/_authenticated/departments/'
    | '/_authenticated/help-center/'
    | '/_authenticated/settings/'
    | '/_authenticated/tasks/'
    | '/_authenticated/tickets/'
    | '/_authenticated/visitor-management/companies/$companyId'
    | '/_authenticated/visitor-management/visitors/$visitorId'
    | '/_authenticated/visitor-management/companies/'
    | '/_authenticated/visitor-management/visitors/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  authRouteRoute: typeof authRouteRouteWithChildren
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  errors404LazyRoute: typeof errors404LazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  authRouteRoute: authRouteRouteWithChildren,
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  errors404LazyRoute: errors404LazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/(auth)",
        "/_authenticated",
        "/(errors)/404"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/(auth)": {
      "filePath": "(auth)/route.tsx",
      "children": [
        "/(auth)/exit",
        "/(auth)/sign-in",
        "/(auth)/forgot-password",
        "/(auth)/sign-up"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated/route.tsx",
      "children": [
        "/_authenticated/settings",
        "/_authenticated/access-controls/",
        "/_authenticated/apps/",
        "/_authenticated/card-rfid/",
        "/_authenticated/dashboard/",
        "/_authenticated/departments/",
        "/_authenticated/help-center/",
        "/_authenticated/tasks/",
        "/_authenticated/tickets/",
        "/_authenticated/visitor-management/companies/$companyId",
        "/_authenticated/visitor-management/visitors/$visitorId",
        "/_authenticated/visitor-management/companies/",
        "/_authenticated/visitor-management/visitors/"
      ]
    },
    "/(auth)/exit": {
      "filePath": "(auth)/exit.tsx",
      "parent": "/(auth)"
    },
    "/(auth)/sign-in": {
      "filePath": "(auth)/sign-in.tsx",
      "parent": "/(auth)"
    },
    "/_authenticated/settings": {
      "filePath": "_authenticated/settings/route.lazy.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/settings/account",
        "/_authenticated/settings/"
      ]
    },
    "/(auth)/forgot-password": {
      "filePath": "(auth)/forgot-password.lazy.tsx",
      "parent": "/(auth)"
    },
    "/(auth)/sign-up": {
      "filePath": "(auth)/sign-up.lazy.tsx",
      "parent": "/(auth)"
    },
    "/(errors)/404": {
      "filePath": "(errors)/404.lazy.tsx"
    },
    "/_authenticated/settings/account": {
      "filePath": "_authenticated/settings/account.lazy.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/access-controls/": {
      "filePath": "_authenticated/access-controls/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/apps/": {
      "filePath": "_authenticated/apps/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/card-rfid/": {
      "filePath": "_authenticated/card-rfid/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/dashboard/": {
      "filePath": "_authenticated/dashboard/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/departments/": {
      "filePath": "_authenticated/departments/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/help-center/": {
      "filePath": "_authenticated/help-center/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/settings/": {
      "filePath": "_authenticated/settings/index.lazy.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/tasks/": {
      "filePath": "_authenticated/tasks/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/tickets/": {
      "filePath": "_authenticated/tickets/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/visitor-management/companies/$companyId": {
      "filePath": "_authenticated/visitor-management/companies/$companyId.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/visitor-management/visitors/$visitorId": {
      "filePath": "_authenticated/visitor-management/visitors/$visitorId.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/visitor-management/companies/": {
      "filePath": "_authenticated/visitor-management/companies/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/visitor-management/visitors/": {
      "filePath": "_authenticated/visitor-management/visitors/index.lazy.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
